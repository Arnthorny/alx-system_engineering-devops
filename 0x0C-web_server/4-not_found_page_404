#!/usr/bin/env bash
# Bash script to configure your Nginx server to have a custom 404 page
# that contains the string 'Ceci n'est pas une page'.
# This script uses `sed` to replace the closing brace in the config file with the required directive and another closng brace
# printf could also be used to construct a new server {} context to replace the entire text in the config file. 
# As printf supports multiline strings. E.g `printf %s "server {...}" > "$path_config"`.

apt-get -y update
apt-get -y install nginx


if ! nginx -v
then
	exit
fi

# Create a default index html containing Hello world!
path_html="/var/www/html/index.html"
echo "Hello World!" > "$path_html"

path_config="/etc/nginx/sites-available/default"
err_file="error-404.html"

# Add redirection directive to the configuration file for the page '/redirect_me'
text_re_dir="\tlocation \/redirect_me {\n\t\treturn 301 https:\/\/www.youtube.com\/watch\?v=QH2-TGUlwu4;\n\t}\n}"
sed -i -r "s/^}$/$text_re_dir/" "$path_config"


# Add `error_page` directive to the configuration file
text_err_loc="\n\tlocation \/$err_file {\n\t\tinternal;\n\t}"
text_err_dir="\n\terror_page 404 \/$err_file;$text_err_loc\n}"
sed -i -r "s/^}$/$text_err_dir/" "$path_config"

# Create an error page html file
path_404="/var/www/html/$err_file"
echo "Ceci n'est pas une page" > "$path_404"

service nginx restart
